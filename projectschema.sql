-- MySQL dump 10.13  Distrib 8.0.42, for Win64 (x86_64)
--
-- Host: localhost    Database: snmproject
-- ------------------------------------------------------
-- Server version	8.0.42

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!50503 SET NAMES utf8mb4 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `filesdata`
--

DROP TABLE IF EXISTS `filesdata`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `filesdata` (
  `fid` int unsigned NOT NULL AUTO_INCREMENT,
  `fname` varchar(50) NOT NULL,
  `fda` longblob,
  `created_at` datetime DEFAULT CURRENT_TIMESTAMP,
  `added_by` int unsigned DEFAULT NULL,
  PRIMARY KEY (`fid`),
  KEY `added_by` (`added_by`),
  CONSTRAINT `filesdata_ibfk_1` FOREIGN KEY (`added_by`) REFERENCES `users` (`userid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `filesdata`
--

LOCK TABLES `filesdata` WRITE;
/*!40000 ALTER TABLE `filesdata` DISABLE KEYS */;
INSERT INTO `filesdata` VALUES (14,'app.py',_binary '# app.py\r\nimport re\r\nfrom flask import Flask, request, render_template, redirect, url_for, flash, session \r\nfrom otp import genotp\r\nfrom cmail import send_mail\r\nfrom io import BytesIO\r\nfrom stoken import entoken, dntoken\r\nimport mysql.connector\r\nimport mimetypes\r\nimport flask_excel as excel\r\nfrom flask import send_file\r\n\r\n# Set up the database connection\r\nmydb = mysql.connector.connect(user=\'root\', host=\'localhost\', password=\'ruthwik\', database=\'snmproject\')\r\napp = Flask(__name__)\r\napp.secret_key = \'code@123\'\r\nexcel.init_excel(app)\r\n\r\n\'\'\' Welcome \'\'\'\r\n@app.route(\'/\')\r\ndef home():\r\n    return render_template(\'welcome.html\')\r\n\r\n# --- User Authentication Routes ---\r\n\'\'\' register \'\'\'\r\n@app.route(\'/userregister\',methods=[\'GET\',\'POST\'])\r\ndef userregister():\r\n    if request.method==\'POST\':\r\n        print(request.form)\r\n        username=request.form[\'username\']\r\n        useremail=request.form[\'email\']\r\n        password=request.form[\'password\']\r\n        cursor=mydb.cursor(buffered=True)\r\n        cursor.execute(\'select count(useremail) from users where useremail=%s\',[useremail])\r\n        email_count=cursor.fetchone()\r\n        if email_count[0]==0:\r\n            gotp=genotp()\r\n            userdata={\'useremail\':useremail,\'username\':username,\'password\':password,\'gotp\':gotp}\r\n            subject=\'OTP for SNM Application\'\r\n            body=f\'Use the given otp{gotp}\'\r\n            send_mail(to=useremail,body=body,subject=subject)\r\n            flash(f\'Otp has sent to given mail {useremail}\')\r\n            return redirect(url_for(\'otpverify\',endata=entoken(data=userdata))) \r\n        elif email_count[0]==1:\r\n            flash(f\'{useremail}already existed please login\')\r\n            return redirect(url_for(\'userregister\'))\r\n        else:\r\n            flash(\'something went wrong\')\r\n            \r\n    return render_template(\'register.html\')\r\n\r\n\'\'\' OTP Verification \'\'\'\r\n@app.route(\'/otpverify/<endata>\',methods=[\'GET\',\'POST\'])\r\ndef otpverify(endata):\r\n    if request.method==\"POST\":\r\n        user_otp=request.form[\'otp\']\r\n        dndata=dntoken(data=endata)   \r\n        if dndata[\'gotp\']==user_otp:\r\n            cursor=mydb.cursor()\r\n            cursor.execute(\'insert into users(username,useremail,password) values(%s,%s,%s)\',[dndata[\'username\'],dndata[\'useremail\'],dndata[\'password\']])\r\n            mydb.commit()\r\n            flash (f\'details registered successfully\')\r\n            return \'Success\'\r\n        else:\r\n            flash(\'otp was incorect\')\r\n    return render_template(\'otp.html\')\r\n\r\n\'\'\' login \'\'\'\r\n@app.route(\'/userlogin\',methods=[\'GET\',\'POST\'])\r\ndef userlogin():\r\n    if not session.get(\'user\'):\r\n        if request.method==\'POST\':\r\n            login_useremail=request.form[\'useremail\']\r\n            login_password=request.form[\'password\']\r\n            cursor=mydb.cursor(buffered=True)\r\n            cursor.execute(\'select count(*) from users where useremail=%s\',[login_useremail])\r\n            email_count=cursor.fetchone()\r\n            if email_count[0]==1:\r\n                cursor.execute(\'select password from users where useremail=%s\',[login_useremail])\r\n                stored_password=cursor.fetchone()\r\n                if stored_password[0]==login_password:\r\n                    session[\'user\']=login_useremail\r\n                    return redirect(url_for(\'dashboard\'))\r\n                else:\r\n                    flash(\'password was incorrect\')\r\n                    return redirect(url_for(\'userlogin\'))\r\n            elif email_count[0]==0:\r\n                flash(f\'{login_useremail} not found\')\r\n                return redirect(url_for(\'userlogin\'))\r\n        return render_template(\'userlogin.html\')\r\n    else:\r\n        return redirect(url_for(\'dashboard\'))\r\n    \r\n# --- Dashboard and Notes Routes ---\r\n@app.route(\'/dashboard\')\r\ndef dashboard():\r\n    if session.get(\'user\'):\r\n        return render_template(\'dashboard.html\', viewing_notes=True)\r\n    else:\r\n        flash(\'please login first\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Add Notes \'\'\'\r\n@app.route(\'/showaddnotes\')\r\ndef showaddnotes():\r\n    if session.get(\'user\'):\r\n        return render_template(\'dashboard.html\', viewing_addnotes=True)\r\n    else:\r\n        flash(\'please login first\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Add Notes \'\'\'\r\n@app.route(\'/addnotes\', methods=[\'POST\'])\r\ndef addnotes():\r\n    if session.get(\'user\'):\r\n        if request.method == \'POST\':\r\n            title = request.form[\'note-title\']\r\n            description = request.form[\'note-description\']\r\n            cursor = mydb.cursor(buffered=True)\r\n            cursor.execute(\'select userid from users where useremail=%s\', [session.get(\'user\')])\r\n            user_id = cursor.fetchone()\r\n            if user_id:\r\n                cursor.execute(\'insert into notes(title, decription, added_by) values(%s, %s, %s)\', [title, description, user_id[0]])\r\n                mydb.commit()\r\n                flash(\'notes added successfully\')\r\n                return redirect(url_for(\'viewallnotes\'))\r\n            else:\r\n                flash(\'user id not found\')\r\n                return redirect(url_for(\'addnotes\'))\r\n        else:\r\n            flash(\'could not store data\')\r\n            return redirect(url_for(\'dashboard\'))\r\n    else:\r\n        flash(\'please login first to add notes\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' View all notes \'\'\'\r\n@app.route(\'/viewallnotes\')\r\ndef viewallnotes():\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'select * from notes where added_by=(select userid from users where useremail=%s)\', [session.get(\'user\')])\r\n        all_notesdata = cursor.fetchall()\r\n        if all_notesdata:\r\n            return render_template(\'dashboard.html\', all_notesdata=all_notesdata, viewing_notes=True)\r\n        else:\r\n            flash(\'could not fetch notes data\')\r\n            return redirect(url_for(\'dashboard\'))\r\n    else: \r\n        flash(\'please login first to view notes\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' View notes \'\'\'\r\n@app.route(\'/viewnotes/<nid>\')\r\ndef viewnotes(nid):\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'select * from notes where nid=%s\',[nid])\r\n        note_data = cursor.fetchone()\r\n        if note_data:\r\n            return render_template(\'viewnotes.html\', note_data=note_data)\r\n        else:\r\n            flash(\'could not fetch note data\')\r\n            return redirect(url_for(\'viewallnotes\'))\r\n    else:\r\n        flash(\'please login first to view notes\')\r\n        return redirect(url_for(\'userlogin\'))\r\n    \r\n\'\'\' Delete Notes \'\'\'\r\n@app.route(\'/deletenotes/<nid>\')\r\ndef deletenotes(nid):\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'delete from notes where nid=%s and added_by=(select userid from users where useremail=%s)\', [nid, session.get(\'user\')])\r\n        mydb.commit()\r\n        flash(\'note deleted successfully\')\r\n        return redirect(url_for(\'viewallnotes\'))\r\n    else:\r\n        flash(\'please login first to delete notes\')\r\n        return redirect(url_for(\'userlogin\'))\r\n    \r\n\'\'\' Update Notes \'\'\'\r\n@app.route(\'/updatenotes/<nid>\', methods=[\'GET\', \'POST\'])\r\ndef updatenotes(nid):\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        if request.method == \'POST\':\r\n            title = request.form[\'title\']\r\n            description = request.form[\'description\']\r\n            cursor.execute(\'update notes set title=%s, decription=%s where nid=%s and added_by=(select userid from users where useremail=%s)\', [title, description, nid, session.get(\'user\')])\r\n            mydb.commit()\r\n            flash(\'note updated successfully\')\r\n            return redirect(url_for(\'viewallnotes\'))\r\n        else:\r\n            cursor.execute(\'select * from notes where nid=%s and added_by=(select userid from users where useremail=%s)\', [nid, session.get(\'user\')])\r\n            note_data = cursor.fetchone()\r\n            if note_data:\r\n                return render_template(\'updatenotes.html\', note_data=note_data)\r\n            else:\r\n                flash(\'could not fetch note data\')\r\n                return redirect(url_for(\'viewallnotes\'))\r\n    else:\r\n        flash(\'please login first to update notes\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n# --- File Management Routes ---\r\n@app.route(\'/showuploadfiles\')\r\ndef showuploadfiles():\r\n    if session.get(\'user\'):\r\n        return render_template(\'dashboard.html\', viewing_uploadfiles=True)\r\n    else:\r\n        flash(\'please login first\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Upload File \'\'\'\r\n@app.route(\'/uploadfile\', methods=[\'GET\', \'POST\'])\r\ndef uploadfile():\r\n    if session.get(\'user\'):\r\n        if request.method == \'POST\':\r\n            file_data=request.files[\'file-upload\']\r\n            fname=file_data.filename\r\n            f_data=file_data.read()\r\n            cursor=mydb.cursor(buffered=True)\r\n            cursor.execute(\'Select userid from users where useremail=%s\',[session.get(\'user\')])\r\n            user_id = cursor.fetchone()\r\n            cursor.execute(\'insert into filesdata(fname,fda,added_by) values(%s,%s,%s)\',[fname,f_data,user_id[0]])\r\n            mydb.commit()   \r\n            cursor.close()\r\n            flash(\'file uploaded successfully\')\r\n        return redirect(url_for(\'viewallfiles\'))\r\n    else:\r\n        flash(\'please login first to upload files\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' View all files \'\'\'\r\n@app.route(\'/viewallfiles\')\r\ndef viewallfiles():\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'select fid,fname,created_at from filesdata where added_by=(select userid from users where useremail=%s)\', [session.get(\'user\')])\r\n        all_filesdata = cursor.fetchall()\r\n        if all_filesdata:\r\n            return render_template(\'dashboard.html\', all_filesdata=all_filesdata, viewing_files=True)\r\n        else:\r\n            flash(\'could not fetch files data\')\r\n            return redirect(url_for(\'dashboard\'))\r\n    else:\r\n        flash(\'please login first to view files\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Helper function to get MIME type from filename\'\'\'\r\ndef get_mimetype(filename):\r\n    mimetype, _ = mimetypes.guess_type(filename)\r\n    if mimetype is None:\r\n        return \'application/octet-stream\'\r\n    return mimetype\r\n\r\n\'\'\' View a single file \'\'\'\r\n@app.route(\'/viewfile/<fid>\')\r\ndef viewfile(fid):\r\n    if not session.get(\'user\'):\r\n        flash(\'Please log in to view files.\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n    cursor = mydb.cursor(buffered=True)\r\n    cursor.execute(\'select fname from filesdata where fid=%s and added_by=(select userid from users where useremail=%s)\', [fid, session.get(\'user\')])\r\n    file_data = cursor.fetchone()\r\n\r\n    if not file_data:\r\n        flash(\'File not found or you do not have permission to view it.\')\r\n        return redirect(url_for(\'viewallfiles\'))\r\n\r\n    file_name = file_data[0]\r\n    mimetype = get_mimetype(file_name)\r\n    \r\n    if mimetype.startswith(\'image/\'):\r\n        return render_template(\'dashboard.html\', viewing_image_content=True, file_name=file_name, fid=fid)\r\n    elif mimetype.startswith(\'text/\'):\r\n        cursor.execute(\'select fda from filesdata where fid=%s\', [fid])\r\n        file_content = cursor.fetchone()[0]\r\n        try:\r\n            decoded_content = file_content.decode(\'utf-8\')\r\n        except UnicodeDecodeError:\r\n            decoded_content = \"File content cannot be displayed as text.\"\r\n        return render_template(\'dashboard.html\', viewing_file_content=True, file_name=file_name, file_content=decoded_content)\r\n    else:\r\n        return redirect(url_for(\'downloadfile\', fid=fid))\r\n\r\n\'\'\' Serve raw file data (for images)\'\'\'\r\n@app.route(\'/servefile/<fid>\')\r\ndef serve_file_data(fid):\r\n    if not session.get(\'user\'):\r\n        return \"Unauthorized\", 401\r\n    \r\n    cursor = mydb.cursor(buffered=True)\r\n    cursor.execute(\'select fname, fda from filesdata where fid=%s and added_by=(select userid from users where useremail=%s)\', [fid, session.get(\'user\')])\r\n    file_data = cursor.fetchone()\r\n    \r\n    if not file_data:\r\n        return \"File not found\", 404\r\n\r\n    file_name, file_content = file_data\r\n    mimetype = get_mimetype(file_name)\r\n    \r\n    return send_file(BytesIO(file_content), mimetype=mimetype, download_name=file_name)\r\n\r\n\r\n\'\'\' Download a file \'\'\'\r\n@app.route(\'/downloadfile/<fid>\')\r\ndef downloadfile(fid):\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'select fname, fda from filesdata where fid=%s and added_by=(select userid from users where useremail=%s)\', [fid, session.get(\'user\')])\r\n        file_data = cursor.fetchone()\r\n        if file_data:\r\n            file_name, file_content = file_data\r\n            file_stream = BytesIO(file_content)\r\n            return send_file(file_stream, download_name=file_name, as_attachment=True)\r\n        else:\r\n            flash(\'File not found or you do not have permission to download it.\')\r\n            return redirect(url_for(\'viewallfiles\'))\r\n    else:\r\n        flash(\'Please log in to download files.\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Delete a file \'\'\'\r\n@app.route(\'/deletefile/<fid>\')\r\ndef deletefile(fid):\r\n    if session.get(\'user\'):\r\n        cursor = mydb.cursor(buffered=True)\r\n        cursor.execute(\'delete from filesdata where fid=%s and added_by=(select userid from users where useremail=%s)\', [fid, session.get(\'user\')])\r\n        mydb.commit()\r\n        flash(\'File deleted successfully\')\r\n        return redirect(url_for(\'viewallfiles\'))\r\n    else:\r\n        flash(\'Please log in to delete files.\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Get excel Data \'\'\'\r\n@app.route(\'/getexceldata\')\r\ndef getexceldata():\r\n    if session.get(\'user\'):\r\n        cursor=mydb.cursor(buffered=True)\r\n        cursor.execute(\'select userid from users where useremail=%s\', [session.get(\'user\')])\r\n        user_id = cursor.fetchone()[0]\r\n        cursor.execute(\'select * from notes where added_by=%s\', [user_id])\r\n        notes_data = cursor.fetchall()  \r\n        data=[list(i) for i in notes_data]\r\n        columns_heading=[\'Notes_Id\',\'Title\',\'Description\',\'Created_at\',\'User_Id\']\r\n        data.insert(0, columns_heading)\r\n        return excel.make_response_from_array(data, \'xlsx\',file_name=\'data\')\r\n    else:\r\n        flash(\'please login first to download excel\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Search Notes and Files\'\'\'\r\n@app.route(\'/search_all\', methods=[\'POST\'])\r\ndef search_all():\r\n    if session.get(\'user\'):\r\n        sdata = request.form[\'sdata\']\r\n        cursor = mydb.cursor(buffered=True)\r\n        \r\n        # Search for notes\r\n        cursor.execute(\'select * from notes where (title LIKE %s OR decription LIKE %s) and added_by=(select userid from users where useremail=%s)\', [f\'%{sdata}%\', f\'%{sdata}%\', session.get(\'user\')])\r\n        notes_results = cursor.fetchall()\r\n\r\n        # Search for files\r\n        cursor.execute(\'select fid, fname, created_at from filesdata where fname LIKE %s and added_by=(select userid from users where useremail=%s)\', [f\'%{sdata}%\', session.get(\'user\')])\r\n        files_results = cursor.fetchall()\r\n        \r\n        if notes_results or files_results:\r\n            return render_template(\'dashboard.html\', notes_results=notes_results, files_results=files_results, search_term=sdata)\r\n        else:\r\n            flash(f\'No matching notes or files found for \"{sdata}\".\')\r\n            return redirect(url_for(\'dashboard\'))\r\n    else:\r\n        flash(\'Please login first to search.\')\r\n        return redirect(url_for(\'userlogin\'))\r\n\r\n\'\'\' Logout \'\'\'\r\n@app.route(\'/userlogout\')\r\ndef userlogout():\r\n    session.pop(\'user\', None)\r\n    flash(\'logged out successfully\')\r\n    return redirect(url_for(\'userlogin\'))\r\n\r\napp.run(debug=True, use_reloader=True)','2025-09-04 15:41:10',3),(15,'cmail.py',_binary 'import smtplib\r\nfrom email.message import EmailMessage\r\ndef send_mail(to,subject,body):\r\n    server=smtplib.SMTP_SSL(\'smtp.gmail.com\',465) #obj creation for gmail server\r\n    server.login(\'sairuthwik2002@gmail.com\',\'xibh dfhr ficl yjil\') #login to gmail\r\n    msg=EmailMessage() #email format obj creation\r\n    msg[\'FROM\']=\'sairuthwik2002@gmail.com\'\r\n    msg[\'TO\']=to\r\n    msg[\'SUBJECT\']=subject\r\n    msg.set_content(body)\r\n    server.send_message(msg) #mail sending\r\n    server.close() #closing the server obj\r\n    \r\n    ','2025-09-04 15:41:23',3),(16,'otp.py',_binary 'import random\r\ndef genotp():\r\n    \'\'\' generating otp with 6 length \'\'\'\r\n    otp=\'\'\r\n    u_c=[chr(i) for i in range(ord(\"A\"),ord(\"Z\")+1)]\r\n\r\n    l_c=[chr(i) for i in range(ord(\"a\"),ord(\"z\")+1)]\r\n    for i in range(2):\r\n        otp=otp+random.choice(u_c)+str(random.randint(0,9))+random.choice(l_c)\r\n    return otp\r\n','2025-09-04 15:41:34',3),(17,'stoken.py',_binary 'from itsdangerous import URLSafeTimedSerializer\r\nsalt=\'otpverify\'\r\ndef entoken(data):\r\n    serializer=URLSafeTimedSerializer(\'code@123\')\r\n    return serializer.dumps(data,salt=salt)\r\ndef dntoken(data):\r\n    serializer=URLSafeTimedSerializer(\'code@123\')\r\n    return serializer.loads(data,salt=salt)','2025-09-04 15:41:50',3),(18,'dashboard.html',_binary '<!-- dashboard.html -->\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Dashboard</title>\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            font-family: \'Inter\', sans-serif;\r\n        }\r\n\r\n        @keyframes fadeIn {\r\n            from {\r\n                opacity: 0;\r\n            }\r\n\r\n            to {\r\n                opacity: 1;\r\n            }\r\n        }\r\n\r\n        .animated-content {\r\n            animation: fadeIn 0.8s ease-out forwards;\r\n        }\r\n\r\n        .hidden {\r\n            display: none;\r\n        }\r\n    </style>\r\n</head>\r\n{% with messages = get_flashed_messages() %}\r\n{% if messages %}\r\n{% for message in messages %}\r\n<center style=\"color: rgb(224, 207, 245);\">{{ message }}</center>\r\n{% endfor %}\r\n{% endif %}\r\n{% endwith %}\r\n\r\n<body class=\"bg-gray-950 text-white min-h-screen\">\r\n\r\n    <div class=\"animated-content p-4 md:p-8\">\r\n\r\n        <nav class=\"bg-gray-900 rounded-2xl shadow-xl p-4 flex flex-col md:flex-row items-center justify-between mb-8\">\r\n\r\n            <div class=\"flex items-center space-x-4 mb-4 md:mb-0\">\r\n                <div class=\"relative group\">\r\n                    <button id=\"notes-dropdown-btn\"\r\n                        class=\"bg-gray-800 text-white px-5 py-2 rounded-xl flex items-center hover:bg-gray-700 transition-colors duration-300\">\r\n                        Notes\r\n                        <svg class=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\">\r\n                            </path>\r\n                        </svg>\r\n                    </button>\r\n                    <ul id=\"notes-dropdown-menu\"\r\n                        class=\"absolute hidden top-12 left-0 bg-gray-800 text-white rounded-xl shadow-lg z-10 w-48 py-2\">\r\n                        <li><a href=\"{{url_for(\'showaddnotes\')}}\" id=\"add-notes-btn\"\r\n                                class=\"block px-4 py-2 hover:bg-gray-700 transition-colors duration-300\">Add notes</a>\r\n                        </li>\r\n                        <li><a href=\"{{url_for(\'viewallnotes\')}}\" id=\"view-all-notes-btn\"\r\n                                class=\"block px-4 py-2 hover:bg-gray-700 transition-colors duration-300\">View all\r\n                                notes</a></li>\r\n                        <li><a href=\"{{url_for(\'getexceldata\')}}\"\r\n                                class=\"block px-4 py-2 hover:bg-gray-700 transition-colors duration-300\">Get Excel</a>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n\r\n                <div class=\"relative group\">\r\n                    <button id=\"files-dropdown-btn\"\r\n                        class=\"bg-gray-800 text-white px-5 py-2 rounded-xl flex items-center hover:bg-gray-700 transition-colors duration-300\">\r\n                        Files\r\n                        <svg class=\"w-4 h-4 ml-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"\r\n                            xmlns=\"http://www.w3.org/2000/svg\">\r\n                            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\">\r\n                            </path>\r\n                        </svg>\r\n                    </button>\r\n                    <ul id=\"files-dropdown-menu\"\r\n                        class=\"absolute hidden top-12 left-0 bg-gray-800 text-white rounded-xl shadow-lg z-10 w-48 py-2\">\r\n                        <li><a href=\"{{url_for(\'showuploadfiles\')}}\" id=\"upload-files-btn\"\r\n                                class=\"block px-4 py-2 hover:bg-gray-700 transition-colors duration-300\">Upload\r\n                                files</a></li>\r\n                        <li><a href=\"{{url_for(\'viewallfiles\')}}\" id=\"view-all-files-btn\"\r\n                                class=\"block px-4 py-2 hover:bg-gray-700 transition-colors duration-300\">View all\r\n                                files</a></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            {{session.get(\'user\')}}\r\n            <div class=\"flex items-center space-x-4\">\r\n                <form action=\"{{url_for(\'search_all\')}}\" method=\"POST\" class=\"flex items-center space-x-2\">\r\n                    <input type=\"text\" name=\"sdata\" placeholder=\"Search notes, files...\"\r\n                        class=\"bg-gray-800 text-white px-5 py-2 rounded-xl focus:outline-none focus:ring-2 focus:ring-teal-400 focus:border-transparent transition-all duration-300\">\r\n                    <button type=\"submit\"\r\n                        class=\"bg-gray-700 text-white px-5 py-2 rounded-xl hover:bg-gray-600 transition-colors duration-300\">\r\n                        Search\r\n                    </button>\r\n                </form>\r\n                <a href=\"{{url_for(\'userlogout\')}}\"\r\n                    class=\"bg-red-500 text-white px-5 py-2 rounded-xl font-bold hover:bg-red-600 transition-colors duration-300\">\r\n                    Logout\r\n                </a>\r\n            </div>\r\n        </nav>\r\n\r\n        <main class=\"bg-gray-900 p-8 rounded-2xl shadow-xl min-h-[50vh]\">\r\n\r\n            {% if viewing_addnotes %}\r\n            <div id=\"add-notes-section\">\r\n                <div class=\"note-container max-w-lg mx-auto\">\r\n                    <h2 class=\"text-3xl font-bold text-center text-white mb-6\">Add New Note</h2>\r\n                    <form action=\"{{url_for(\'addnotes\')}}\" method=\"POST\">\r\n                        <label for=\"note-title\" class=\"block text-gray-400 text-sm font-medium mb-2\">Title</label>\r\n                        <input type=\"text\" id=\"note-title\" name=\"note-title\" required\r\n                            class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus:outline-none focus:ring-2 focus:ring-teal-400 focus:border-transparent transition-all duration-300\">\r\n\r\n                        <label for=\"note-description\"\r\n                            class=\"block text-gray-400 text-sm font-medium mb-2\">Description</label>\r\n                        <textarea id=\"note-description\" name=\"note-description\" rows=\"8\"\r\n                            placeholder=\"Write your notes here...\" required\r\n                            class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus:outline-none focus:ring-2 focus:ring-teal-400 focus:border-transparent transition-all duration-300\"></textarea>\r\n\r\n                        <button type=\"submit\"\r\n                            class=\"w-full bg-teal-500 text-white font-bold py-3 rounded-xl hover:bg-teal-600 transition-colors duration-300\">\r\n                            Add Note\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {% endif %}\r\n\r\n            {% if viewing_notes and not notes_results and not files_results %}\r\n            <div id=\"view-all-notes-section\">\r\n                <h2 class=\"text-3xl font-bold text-white mb-6\">All Notes</h2>\r\n                <div class=\"overflow-x-auto rounded-lg shadow-md\">\r\n                    <table class=\"min-w-full divide-y divide-gray-700\">\r\n                        <thead class=\"bg-gray-700\">\r\n                            <tr>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Notes ID</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Title</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Created</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"bg-gray-800 divide-y divide-gray-700\">\r\n                            {% if all_notesdata %}\r\n                            {% for i in all_notesdata %}\r\n                            <tr class=\"hover:bg-gray-700\">\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{{i[0]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[1]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[3]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                                    <a href=\"{{url_for(\'viewnotes\',nid=i[0])}}\"\r\n                                        class=\"text-teal-400 hover:text-teal-500 mr-4\">View</a>\r\n                                    <a href=\"{{url_for(\'updatenotes\',nid=i[0])}}\"\r\n                                        class=\"text-yellow-400 hover:text-yellow-500 mr-4\">Update</a>\r\n                                    <a href=\"{{url_for(\'deletenotes\',nid=i[0])}}\"\r\n                                        class=\"text-red-400 hover:text-red-500\">Delete</a>\r\n                                </td>\r\n                            </tr>\r\n                            {% endfor %}\r\n                            {% endif %}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {% endif %}\r\n\r\n            {% if viewing_uploadfiles %}\r\n            <div id=\"upload-files-section\">\r\n                <div class=\"note-container max-w-lg mx-auto\">\r\n                    <h2 class=\"text-3xl font-bold text-center text-white mb-6\">Upload File</h2>\r\n                    <form action=\"{{url_for(\'uploadfile\')}}\" method=\"POST\" enctype=\"multipart/form-data\">\r\n                        <label for=\"file-upload\" class=\"block text-gray-400 text-sm font-medium mb-2\">Choose\r\n                            File</label>\r\n                        <input type=\"file\" id=\"file-upload\" name=\"file-upload\" required\r\n                            class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus:outline-none focus:ring-2 focus:ring-teal-400 focus:border-transparent transition-all duration-300\">\r\n\r\n                        <button type=\"submit\"\r\n                            class=\"w-full bg-teal-500 text-white font-bold py-3 rounded-xl hover:bg-teal-600 transition-colors duration-300 mt-4\">\r\n                            Upload\r\n                        </button>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            {% endif %}\r\n\r\n\r\n            {% if viewing_files and not notes_results and not files_results %}\r\n            <div id=\"view-all-files-section\">\r\n                <h2 class=\"text-3xl font-bold text-white mb-6\">All Files</h2>\r\n                <div class=\"overflow-x-auto rounded-lg shadow-md\">\r\n                    <table class=\"min-w-full divide-y divide-gray-700\">\r\n                        <thead class=\"bg-gray-700\">\r\n                            <tr>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    File ID</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    File Name</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Created</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"bg-gray-800 divide-y divide-gray-700\">\r\n                            {% for i in all_filesdata %}\r\n                            <tr class=\"hover:bg-gray-700\">\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{{i[0]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[1]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[2]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                                    <a href=\"{{url_for(\'viewfile\',fid=i[0])}}\"\r\n                                        class=\"text-teal-400 hover:text-teal-500 mr-4\">View</a>\r\n                                    <a href=\"{{url_for(\'downloadfile\',fid=i[0])}}\"\r\n                                        class=\"text-green-400 hover:text-green-500 mr-4\">Download</a>\r\n                                    <a href=\"{{url_for(\'deletefile\',fid=i[0])}}\"\r\n                                        class=\"text-red-400 hover:text-red-500\">Delete</a>\r\n                                </td>\r\n                            </tr>\r\n                            {% endfor %}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n            {% endif %}\r\n\r\n            {% if notes_results or files_results %}\r\n            <div id=\"search-results-section\" class=\"mt-8\">\r\n                <h2 class=\"text-3xl font-bold text-white mb-6\">Search Results for \"{{ search_term }}\"</h2>\r\n                {% if notes_results %}\r\n                <h3 class=\"text-2xl font-bold text-white mb-4\">Notes</h3>\r\n                <div class=\"overflow-x-auto rounded-lg shadow-md mb-8\">\r\n                    <table class=\"min-w-full divide-y divide-gray-700\">\r\n                        <thead class=\"bg-gray-700\">\r\n                            <tr>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Notes ID</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Title</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Created</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"bg-gray-800 divide-y divide-gray-700\">\r\n                            {% for i in notes_results %}\r\n                            <tr class=\"hover:bg-gray-700\">\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{{i[0]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[1]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[3]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                                    <a href=\"{{url_for(\'viewnotes\', nid=i[0])}}\"\r\n                                        class=\"text-teal-400 hover:text-teal-500 mr-4\">View</a>\r\n                                    <a href=\"{{url_for(\'updatenotes\', nid=i[0])}}\"\r\n                                        class=\"text-yellow-400 hover:text-yellow-500 mr-4\">Update</a>\r\n                                    <a href=\"{{url_for(\'deletenotes\', nid=i[0])}}\"\r\n                                        class=\"text-red-400 hover:text-red-500\">Delete</a>\r\n                                </td>\r\n                            </tr>\r\n                            {% endfor %}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {% endif %}\r\n\r\n                {% if files_results %}\r\n                <h3 class=\"text-2xl font-bold text-white mb-4\">Files</h3>\r\n                <div class=\"overflow-x-auto rounded-lg shadow-md\">\r\n                    <table class=\"min-w-full divide-y divide-gray-700\">\r\n                        <thead class=\"bg-gray-700\">\r\n                            <tr>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    File ID</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    File Name</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Created</th>\r\n                                <th scope=\"col\"\r\n                                    class=\"px-6 py-3 text-left text-xs font-medium text-gray-300 uppercase tracking-wider\">\r\n                                    Actions</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody class=\"bg-gray-800 divide-y divide-gray-700\">\r\n                            {% for i in files_results %}\r\n                            <tr class=\"hover:bg-gray-700\">\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium text-white\">{{i[0]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[1]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm text-gray-400\">{{i[2]}}</td>\r\n                                <td class=\"px-6 py-4 whitespace-nowrap text-sm font-medium\">\r\n                                    <a href=\"{{url_for(\'viewfile\', fid=i[0])}}\"\r\n                                        class=\"text-teal-400 hover:text-teal-500 mr-4\">View</a>\r\n                                    <a href=\"{{url_for(\'downloadfile\', fid=i[0])}}\"\r\n                                        class=\"text-green-400 hover:text-green-500 mr-4\">Download</a>\r\n                                    <a href=\"{{url_for(\'deletefile\', fid=i[0])}}\"\r\n                                        class=\"text-red-400 hover:text-red-500\">Delete</a>\r\n                                </td>\r\n                            </tr>\r\n                            {% endfor %}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {% endif %}\r\n            </div>\r\n            {% endif %}\r\n            \r\n            {% if viewing_image_content %}\r\n            <div id=\"view-image-section\" class=\"flex flex-col items-center\">\r\n                <h2 class=\"text-3xl font-bold text-white mb-6\">Viewing Image: {{ file_name }}</h2>\r\n                <img src=\"{{ url_for(\'serve_file_data\', fid=fid) }}\" alt=\"{{ file_name }}\"\r\n                    class=\"max-w-full h-auto rounded-lg shadow-md mb-4\" />\r\n                <a href=\"{{ url_for(\'downloadfile\', fid=fid) }}\"\r\n                    class=\"bg-green-500 text-white font-bold py-3 px-6 rounded-xl hover:bg-green-600 transition-colors duration-300\">Download\r\n                    Image</a>\r\n            </div>\r\n            {% endif %}\r\n\r\n            {% if viewing_file_content %}\r\n            <div id=\"view-file-section\">\r\n                <h2 class=\"text-3xl font-bold text-white mb-6\">Viewing File: {{ file_name }}</h2>\r\n                <div class=\"bg-gray-800 p-6 rounded-lg shadow-md\">\r\n                    <pre class=\"whitespace-pre-wrap text-gray-300\">{{ file_content }}</pre>\r\n                </div>\r\n            </div>\r\n            {% endif %}\r\n        </main>\r\n    </div>\r\n\r\n    <script>\r\n        document.addEventListener(\'DOMContentLoaded\', () => {\r\n            const notesDropdownBtn = document.getElementById(\'notes-dropdown-btn\');\r\n            const filesDropdownBtn = document.getElementById(\'files-dropdown-btn\');\r\n            const notesMenu = document.getElementById(\'notes-dropdown-menu\');\r\n            const filesMenu = document.getElementById(\'files-dropdown-menu\');\r\n\r\n            function closeAllDropdowns() {\r\n                notesMenu.classList.add(\'hidden\');\r\n                filesMenu.classList.add(\'hidden\');\r\n            }\r\n\r\n            document.addEventListener(\'click\', function (event) {\r\n                if (notesDropdownBtn.contains(event.target)) {\r\n                    notesMenu.classList.toggle(\'hidden\');\r\n                    filesMenu.classList.add(\'hidden\');\r\n                } else if (filesDropdownBtn.contains(event.target)) {\r\n                    filesMenu.classList.toggle(\'hidden\');\r\n                    notesMenu.classList.add(\'hidden\');\r\n                } else {\r\n                    closeAllDropdowns();\r\n                }\r\n            });\r\n        });\r\n    </script>\r\n</body>\r\n\r\n</html>','2025-09-04 15:42:16',3),(19,'otp.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>OTP Verification</title>\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            font-family: \'Inter\', sans-serif;\r\n        }\r\n\r\n        /* Keyframe animation for a subtle fade-in effect */\r\n        @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(-20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n        }\r\n\r\n        .animated-form {\r\n            animation: fadeIn 0.8s ease-out forwards;\r\n        }\r\n        \r\n        /* Input and button focus effect */\r\n        .focus-ring {\r\n            transition: border-color 0.3s, box-shadow 0.3s;\r\n        }\r\n        .focus-ring:focus {\r\n            border-color: #10B981; /* teal-500 */\r\n            box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.5);\r\n            outline: none;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n{% with messages = get_flashed_messages() %}\r\n  {% if messages %}\r\n    {% for message in messages %}\r\n      <center style=\"color: aliceblue;\">{{ message }}</center>\r\n    {% endfor %}\r\n  {% endif %}\r\n{% endwith %}\r\n\r\n<body class=\"bg-gray-900 flex items-center justify-center min-h-screen p-4\">\r\n\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-sm w-full animated-form\">\r\n\r\n        <h2 class=\"text-3xl font-bold text-center text-white mb-2\">\r\n            Verify Your OTP\r\n        </h2>\r\n        <p class=\"text-center text-gray-400 mb-8\">\r\n            Please enter the 6-digit code sent to your email.\r\n        </p>\r\n\r\n        <form  method=\"POST\">\r\n            \r\n            <div class=\"mb-8\">\r\n                <label for=\"otp\" class=\"sr-only\">Enter OTP</label>\r\n                <input type=\"text\" id=\"otp\" name=\"otp\" placeholder=\"Enter OTP\" required maxlength=\"6\"\r\n                       class=\"w-full text-center px-4 py-3 bg-gray-700 text-white text-xl tracking-widest border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <button type=\"submit\"\r\n                    class=\"w-full bg-teal-500 text-white font-bold py-3 px-4 rounded-xl hover:bg-teal-600 transition-colors duration-300\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n        \r\n        <div class=\"mt-6 text-center\">\r\n            <a href=\"#\" class=\"inline-block text-gray-400 hover:text-teal-500 transition-colors duration-300 font-medium text-sm\">\r\n                Resend OTP\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n','2025-09-04 15:42:31',3),(20,'register.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Register</title>\r\n    <!-- Tailwind CSS via CDN -->\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <!-- Google Font - Inter -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            font-family: \'Inter\', sans-serif;\r\n        }\r\n\r\n        /* Keyframe animation for a subtle fade-in effect */\r\n        @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(-20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n        }\r\n\r\n        .animated-form {\r\n            animation: fadeIn 0.8s ease-out forwards;\r\n        }\r\n        \r\n        /* Input and button focus effect */\r\n        .focus-ring {\r\n            transition: border-color 0.3s, box-shadow 0.3s;\r\n        }\r\n        .focus-ring:focus {\r\n            border-color: #10B981; /* teal-500 */\r\n            box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.5);\r\n            outline: none;\r\n        }\r\n    </style>\r\n</head>\r\n\r\n{% with messages = get_flashed_messages() %}\r\n  {% if messages %}\r\n    {% for message in messages %}\r\n      <center style=\"color: aliceblue;\">{{ message }}</center>\r\n    {% endfor %}\r\n  {% endif %}\r\n{% endwith %}\r\n\r\n\r\n\r\n<body class=\"bg-gray-900 flex items-center justify-center min-h-screen p-4\">\r\n\r\n    <!-- Registration Form Container -->\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-md w-full animated-form\">\r\n\r\n        <!-- Form Header -->\r\n        <h2 class=\"text-3xl font-bold text-center text-white mb-8\">\r\n            Create an Account\r\n        </h2>\r\n\r\n        <!-- The Registration Form -->\r\n        <form action=\"#\" method=\"POST\">\r\n            \r\n            <!-- Username Input -->\r\n            <div class=\"mb-6\">\r\n                <label for=\"username\" class=\"block text-gray-400 text-sm font-medium mb-2\">Username</label>\r\n                <input type=\"text\" id=\"username\" name=\"username\" placeholder=\"Your username\" required\r\n                       class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <!-- Email Input -->\r\n            <div class=\"mb-6\">\r\n                <label for=\"email\" class=\"block text-gray-400 text-sm font-medium mb-2\">Email Address</label>\r\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"you@example.com\" required\r\n                       class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <!-- Password Input -->\r\n            <div class=\"mb-8\">\r\n                <label for=\"password\" class=\"block text-gray-400 text-sm font-medium mb-2\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required\r\n                       class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <!-- Submit Button -->\r\n            <button type=\"submit\"\r\n                    class=\"w-full bg-teal-500 text-white font-bold py-3 px-4 rounded-xl hover:bg-teal-600 transition-colors duration-300\">\r\n                Submit\r\n            </button>\r\n        </form>\r\n        \r\n        <!-- Back to Home Button -->\r\n        <div class=\"mt-6 text-center\">\r\n            <a href=\"{{url_for(\'home\')}}\" class=\"inline-block text-gray-400 hover:text-teal-500 transition-colors duration-300 font-medium text-sm\">\r\n                ← Back to Home\r\n            </a>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n','2025-09-04 15:42:43',3),(21,'updatenotes.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>View Notes</title>\r\n  <script src=\"https://cdn.tailwindcss.com\"></script>\r\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n  <style>\r\n    body {\r\n      font-family: \'Inter\', sans-serif;\r\n      background-color: #0d1117;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 100vh;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .note-container {\r\n      background-color: #161b22;\r\n      border-radius: 1.5rem;\r\n      padding: 2.5rem 3rem;\r\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.25), 0 10px 10px -5px rgba(0, 0, 0, 0.25);\r\n      max-width: 32rem;\r\n      width: 100%;\r\n      color: #e6e6e6;\r\n    }\r\n\r\n    h2 {\r\n      text-align: center;\r\n      font-size: 1.875rem;\r\n      font-weight: 700;\r\n      margin-bottom: 0.5rem; /* Adjusted to reduce space after the heading */\r\n      color: #ffffff;\r\n    }\r\n    \r\n    .created-at {\r\n      text-align: center;\r\n      margin-bottom: 1.5rem; /* Space below the created_at text */\r\n    }\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      font-weight: 500;\r\n      color: #9ca3af;\r\n    }\r\n\r\n    input[type=\"text\"],\r\n    textarea {\r\n      width: 100%;\r\n      padding: 0.75rem 1rem;\r\n      margin-bottom: 1.25rem;\r\n      border: 1px solid #374151;\r\n      border-radius: 0.5rem;\r\n      font-size: 1rem;\r\n      resize: vertical;\r\n      background-color: #1f2937;\r\n      color: #ffffff;\r\n    }\r\n  </style>\r\n</head>\r\n<body class=\"bg-gray-950 text-white min-h-screen p-4 flex items-center justify-center\">\r\n\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-lg w-full\">\r\n        <h2 class=\"text-3xl font-bold text-center text-white mb-6\">View Notes</h2>\r\n        <p class=\"text-center text-gray-400 text-sm font-medium mb-6\">Created at : {{note_data[3]}}</p>\r\n        <form method=\"post\">\r\n        \r\n        <label for=\"title\" class=\"block text-gray-400 text-sm font-medium mb-2\">Title</label>\r\n        <input type=\"text\" id=\"title\" name=\"title\" value=\"{{note_data[1]}}\" \r\n               class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n\r\n        <label for=\"description\" class=\"block text-gray-400 text-sm font-medium mb-2\">Description</label>\r\n        <textarea id=\"description\" name=\"description\" rows=\"8\" \r\n                  class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">{{note_data[2]}}</textarea>\r\n                \r\n                  <button type=\"submit\" class=\"w-full bg-teal-500 text-white font-bold py-3 px-4 rounded-xl hover:bg-teal-600 transition-colors duration-300\">Update Note</button>\r\n        </form>\r\n    </div>\r\n</body>\r\n</html>','2025-09-04 15:42:56',3),(22,'userlogin.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Login</title>\r\n    <!-- Tailwind CSS via CDN -->\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <!-- Google Font - Inter -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            font-family: \'Inter\', sans-serif;\r\n        }\r\n\r\n        /* Keyframe animation for a subtle fade-in effect */\r\n        @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(-20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n        }\r\n\r\n        .animated-form {\r\n            animation: fadeIn 0.8s ease-out forwards;\r\n        }\r\n        \r\n        /* Input and button focus effect */\r\n        .focus-ring {\r\n            transition: border-color 0.3s, box-shadow 0.3s;\r\n        }\r\n        .focus-ring:focus {\r\n            border-color: #10B981; /* teal-500 */\r\n            box-shadow: 0 0 0 2px rgba(16, 185, 129, 0.5);\r\n            outline: none;\r\n        }\r\n    </style>\r\n</head>\r\n<body class=\"bg-gray-900 flex items-center justify-center min-h-screen p-4\">\r\n\r\n    <!-- Login Form Container -->\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-sm w-full animated-form\">\r\n\r\n        <!-- Form Header -->\r\n        <h2 class=\"text-3xl font-bold text-center text-white mb-8\">\r\n            Login to Your Account\r\n        </h2>\r\n\r\n        <!-- The Login Form -->\r\n        <form method=\"POST\">\r\n            \r\n            <!-- Email Input -->\r\n            <div class=\"mb-6\">\r\n                <label for=\"useremail\" class=\"block text-gray-400 text-sm font-medium mb-2\">Email Address</label>\r\n                <input type=\"email\" id=\"useremail\" name=\"useremail\" placeholder=\"you@example.com\" required\r\n                       class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <!-- Password Input -->\r\n            <div class=\"mb-8\">\r\n                <label for=\"password\" class=\"block text-gray-400 text-sm font-medium mb-2\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Enter your password\" required\r\n                       class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n            </div>\r\n\r\n            <!-- Submit Button -->\r\n            <button type=\"submit\"\r\n                    class=\"w-full bg-teal-500 text-white font-bold py-3 px-4 rounded-xl hover:bg-teal-600 transition-colors duration-300\">\r\n                Login\r\n            </button>\r\n        </form>\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n','2025-09-04 15:43:08',3),(23,'viewnotes.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n  <meta charset=\"UTF-8\">\r\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n  <title>View Notes</title>\r\n  <script src=\"https://cdn.tailwindcss.com\"></script>\r\n  <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n  <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n  <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n  <style>\r\n    body {\r\n      font-family: \'Inter\', sans-serif;\r\n      background-color: #0d1117;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n      min-height: 100vh;\r\n      padding: 1rem;\r\n    }\r\n\r\n    .note-container {\r\n      background-color: #161b22;\r\n      border-radius: 1.5rem;\r\n      padding: 2.5rem 3rem;\r\n      box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.25), 0 10px 10px -5px rgba(0, 0, 0, 0.25);\r\n      max-width: 32rem;\r\n      width: 100%;\r\n      color: #e6e6e6;\r\n    }\r\n\r\n    h2 {\r\n      text-align: center;\r\n      font-size: 1.875rem;\r\n      font-weight: 700;\r\n      margin-bottom: 0.5rem; /* Adjusted to reduce space after the heading */\r\n      color: #ffffff;\r\n    }\r\n    \r\n    .created-at {\r\n      text-align: center;\r\n      margin-bottom: 1.5rem; /* Space below the created_at text */\r\n    }\r\n\r\n    label {\r\n      display: block;\r\n      margin-bottom: 0.5rem;\r\n      font-weight: 500;\r\n      color: #9ca3af;\r\n    }\r\n\r\n    input[type=\"text\"],\r\n    textarea {\r\n      width: 100%;\r\n      padding: 0.75rem 1rem;\r\n      margin-bottom: 1.25rem;\r\n      border: 1px solid #374151;\r\n      border-radius: 0.5rem;\r\n      font-size: 1rem;\r\n      resize: vertical;\r\n      background-color: #1f2937;\r\n      color: #ffffff;\r\n    }\r\n  </style>\r\n</head>\r\n<body class=\"bg-gray-950 text-white min-h-screen p-4 flex items-center justify-center\">\r\n\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-lg w-full\">\r\n        <h2 class=\"text-3xl font-bold text-center text-white mb-6\">View Notes</h2>\r\n        <p class=\"text-center text-gray-400 text-sm font-medium mb-6\">Created at : {{note_data[3]}}</p>\r\n        \r\n        <label for=\"title\" class=\"block text-gray-400 text-sm font-medium mb-2\">Title</label>\r\n        <input type=\"text\" id=\"title\" name=\"title\" value=\"{{note_data[1]}}\" readonly\r\n               class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">\r\n\r\n        <label for=\"description\" class=\"block text-gray-400 text-sm font-medium mb-2\">Description</label>\r\n        <textarea id=\"description\" name=\"description\" rows=\"8\" readonly\r\n                  class=\"w-full px-4 py-3 bg-gray-700 text-white border-gray-600 rounded-xl focus-ring\">{{note_data[2]}}</textarea>\r\n    </div>\r\n</body>\r\n</html>','2025-09-04 15:43:20',3),(24,'welcome.html',_binary '<!DOCTYPE html>\r\n<html lang=\"en\">\r\n<head>\r\n    <meta charset=\"UTF-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n    <title>Welcome</title>\r\n    <!-- Tailwind CSS via CDN -->\r\n    <script src=\"https://cdn.tailwindcss.com\"></script>\r\n    <!-- Google Font - Inter -->\r\n    <link rel=\"preconnect\" href=\"https://fonts.googleapis.com\">\r\n    <link rel=\"preconnect\" href=\"https://fonts.gstatic.com\" crossorigin>\r\n    <link href=\"https://fonts.googleapis.com/css2?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\">\r\n    <style>\r\n        body {\r\n            font-family: \'Inter\', sans-serif;\r\n        }\r\n\r\n        /* Keyframe animation for a subtle fade-in effect */\r\n        @keyframes fadeIn {\r\n            from { opacity: 0; transform: translateY(-20px); }\r\n            to { opacity: 1; transform: translateY(0); }\r\n        }\r\n\r\n        .animated-card {\r\n            animation: fadeIn 0.8s ease-out forwards;\r\n        }\r\n        \r\n        /* Button hover animation */\r\n        .btn-hover-effect {\r\n            transition: transform 0.3s ease-in-out, box-shadow 0.3s ease-in-out;\r\n        }\r\n\r\n        .btn-hover-effect:hover {\r\n            transform: translateY(-5px);\r\n            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\r\n        }\r\n    </style>\r\n</head>\r\n<body class=\"bg-gray-900 flex items-center justify-center min-h-screen p-4\">\r\n\r\n    <!-- Welcome Card Container -->\r\n    <div class=\"bg-gray-800 rounded-3xl p-8 md:p-12 shadow-2xl max-w-lg w-full text-center animated-card\">\r\n        \r\n        <!-- Welcome Message -->\r\n        <h1 class=\"text-4xl md:text-5xl font-bold text-white mb-6\">\r\n            Welcome!\r\n        </h1>\r\n        \r\n        <!-- Buttons -->\r\n        <div class=\"flex flex-col md:flex-row space-y-4 md:space-y-0 md:space-x-6 justify-center mt-8\">\r\n            <a href=\"{{url_for(\'userregister\')}}\" class=\"btn-hover-effect bg-teal-500 text-white font-bold py-3 px-8 rounded-full shadow-lg\">\r\n                Register\r\n            </a>\r\n            <a href=\"{{url_for(\'userlogin\')}}\" class=\"btn-hover-effect bg-transparent text-teal-400 font-bold py-3 px-8 rounded-full border border-teal-400 shadow-lg\">\r\n                Login\r\n            </a>\r\n        </div>\r\n    </div>\r\n\r\n</body>\r\n</html>\r\n','2025-09-04 15:43:32',3);
/*!40000 ALTER TABLE `filesdata` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `notes`
--

DROP TABLE IF EXISTS `notes`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `notes` (
  `nid` int unsigned NOT NULL AUTO_INCREMENT,
  `title` mediumtext NOT NULL,
  `decription` longtext,
  `created_at` datetime DEFAULT CURRENT_TIMESTAMP,
  `added_by` int unsigned DEFAULT NULL,
  PRIMARY KEY (`nid`),
  KEY `added_by` (`added_by`),
  CONSTRAINT `notes_ibfk_1` FOREIGN KEY (`added_by`) REFERENCES `users` (`userid`) ON DELETE CASCADE
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `notes`
--

LOCK TABLES `notes` WRITE;
/*!40000 ALTER TABLE `notes` DISABLE KEYS */;
INSERT INTO `notes` VALUES (13,'Flask','SNM Project','2025-09-04 15:40:31',3);
/*!40000 ALTER TABLE `notes` ENABLE KEYS */;
UNLOCK TABLES;

--
-- Table structure for table `users`
--

DROP TABLE IF EXISTS `users`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!50503 SET character_set_client = utf8mb4 */;
CREATE TABLE `users` (
  `userid` int unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(50) NOT NULL,
  `useremail` varchar(50) NOT NULL,
  `password` varchar(20) NOT NULL,
  PRIMARY KEY (`userid`),
  UNIQUE KEY `useremail` (`useremail`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_0900_ai_ci;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `users`
--

LOCK TABLES `users` WRITE;
/*!40000 ALTER TABLE `users` DISABLE KEYS */;
INSERT INTO `users` VALUES (3,'ruthwik','sairuthwik2002@gmail.com','2002');
/*!40000 ALTER TABLE `users` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2025-09-04 16:22:21
